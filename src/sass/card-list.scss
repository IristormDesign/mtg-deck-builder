@import 'variables';
$min-height-card-list: $lhse*6;

@mixin long-card-buttons {
	.card-list {
		li {
			max-width: $width-card-buttons-wide + $width-qty-column;
		}
	}
}
@mixin condensed-card-buttons {
	.card-list {
		li {
			max-width: $width-card-buttons-narrow + $width-qty-column;
		}
	}
}

@include long-card-buttons;

.card-list {
	margin: $lhse*.25 auto;
	min-height: $min-height-card-list;
	display: flex;
	flex-direction: column;

	&.main-deck {
		> header {
			@include screen-readers-only;
		}
	}
	.no-cards {
		display: block;
		text-align: center;
		line-height: $line-height-standard*.875;
		min-height: $min-height-card-list;
		text-shadow: $text-shadow-over-light-bg;
		padding: $lhse*.5;
		color: $color-text-brighter;
		text-wrap: balance;

		a {
			text-shadow: revert;
		}
	}
	ul {
		margin: 0;
		padding: 0 0 0 $width-card-star*.6;
		list-style: none;
		position: relative;
	}
	li {
		display: flex;
		margin: 1px auto;
		transition: .5s cubic-bezier(.5, 0, 0, 1); // For card sorting
		transition-property: transform, background-color, border-radius;
		position: relative;
		background: $color-group-bg;
		border-radius: $border-radius-button;

		&:last-of-type {
			margin-bottom: $lhse*.25;
		}
		&:hover,
		&:focus-within {
			background: $color-group-bg-darker;
			transition-duration: 0s;

			&:hover {
				z-index: index($layers, card-list-item-hover); // To make a hovered card button's glow overlap a focused-within card button's glow positioned directly below the other button.
			}
		}
		&:focus-within {
			z-index: index($layers, card-list-item-focus-within);
		}
		&:first-child {
			margin-top: 0;
		}
		&.gap-after {
			margin-bottom: $margin-card-gap-after;
		}
	}
	.card-list-main-leave-active {
		transition-duration: 0s; // When switching from one deck page to another, this stops the odd lingering of the previous deck list on the current page.
	}
}

@media (max-width: $width-app-breakpoint-tablet) {
	@include condensed-card-buttons();
}
@media (max-width: ($min-width-app * .8)) {
	@include long-card-buttons();
}
@media (max-width: ($min-width-app * .6667)) {
	@include condensed-card-buttons();
}
