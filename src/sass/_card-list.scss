$box-shadow-card-button: 0 -1px divide($lhse, 3) 3px rgba(#000, .3333);
$width-qty-column: 2em;

@mixin box-shadow-hover-card-button($color) {
	box-shadow:
		0 0 0 1px rgba(#000, .375),
		0 0 0 3px $color,
		0 1px 1px 3px rgba(#000, .25),
		$box-shadow-card-button;
}
@mixin long-card-buttons {
	.card-list {
		scroll-margin-top: -$lhse*.5;
		max-width: $max-width-content;

		.list-headings {
			display: flex;

			.card-label-group {
				&:first-of-type {
					padding-right: divide($lhse, 3);
				}
				&:nth-of-type(2) {
					padding-left: 1em;
				}
			}
		}
		.card-button {
			display: flex;
			height: 23px;
		}
		.card-label-group {
			width: 50%;
			padding: 0 divide($lhse, 6);

			&:last-of-type {
				border-top: none;
				margin-top: 0;
				padding-left: 1em;
			}
		}
		li {
			&:has(.qty:hover)	{
				border-top-right-radius: 0;
				border-bottom-right-radius: 0;
			}
			.qty {
				.qty-buttons {
					height: $lhse*1.6667;
				}
			}
		}
	}
}
@mixin condensed-card-buttons {
	.card-list {
		max-width: $max-width-content*.5;
		margin-right: auto;
		margin-left: auto;

		.list-headings {
			display: none;
		}
		.card-button {
			display: block;
			height: 51px;
		}
		.card-label-group {
			width: 100%;
			padding: 0 divide($lhse, 4);

			&:last-of-type {
				border-top: 1px solid rgba(#000, .25);
				padding-left: divide($lhse, 4);
			}
		}
		li {
			&:has(.qty:hover)	{
				border-radius: $border-radius-button;
			}
			.qty {
				.qty-buttons {
					height: $lhse*2;
				}
			}
		}
	}
}

@include long-card-buttons;

.card-list {
	margin-bottom: divide($lhse, 4);
	min-height: $lhse*8;
	display: flex;
	flex-direction: column;
	
	&.no-cards {
		justify-content: center;
		text-align: center;
		color: $color-text-brighter;
		text-shadow: $text-shadow-over-light-bg;
	}
	&.main-deck {
		> header {
			@include screen-readers-only;
		}
	}
	&.sideboard {
		header {
			margin: 0 0 $lhse*.25;
			padding: $lhse*.5;
			background: $color-mythic-very-dim;
			color: $color-text-over-mythic-very-dim;
			border: 1px solid $color-section-border;
			border-top-left-radius: 0;
			border-top-right-radius: 0;
			display: flex;
			justify-content: space-between;
		}
		h3 {
			margin: 0;
		}
		p {
			margin: 0;
		}
	}
	.list-headings {
		@include heading-font;
		display: flex;
		text-shadow: $text-shadow-over-light-bg;
		cursor: default;
		margin-bottom: $lhse*.125;
		
		strong {
			display: block;
			font-size: 66.67%;
			line-height: 1;
			text-transform: uppercase;
			color: $color-text-brighter;
		}
		.qty {
			text-align: center;
			margin-right: -$lhse*.25;
		}
		[title] {
			cursor: help;
		}
	}
	.card-label-group {
		display: flex;
		align-items: center;
		justify-content: space-between;
	}
	.qty-label-group {
		width: $width-qty-column;
	}
	ul {
		margin: 0;
		padding: 0;
		list-style: none;
		position: relative;
	}
	li {
		display: flex;
		margin: 1px 0;
		padding: 0;
		transition: .5s cubic-bezier(.5, 0, 0, 1); // For card sorting
		transition-property: transform, background-color;
		position: relative;
		background: rgba($color-group-bg, .75);
		border-radius: $border-radius-button;
		
		&:hover,
		&:focus-within {
			background: rgba($color-group-bg, 1);
			transition-duration: 0s;

			.card-button {
				filter: contrast(112.5%);
				transition-duration: 0s;
				transition-property: filter, box-shadow, background, border-color;
				border-top-color: rgba(#fff, .5);
				border-right-color: rgba(#fff, .25);
				border-bottom-color: rgba(#000, .5);
				border-left-color: rgba(#000, .25);
				background: lighten($color-frame-generic, 3.125%);
				box-shadow: $box-shadow-card-button;

				&.land {
					background: saturate(darken($color-frame-land, 16.67%), 6.25%);
				}
				&.white {
					background: lighten($color-mana-white, 16.67%);
				}
				&.blue {
					background: saturate(darken($color-frame-blue, 16.67%), 6.25%);
				}
				&.black {
					background: darken($color-frame-black, 41.67%);
					color: desaturate(lighten($color-frame-black, 16.67%), 41.67%);

					.name,
					.type {
						text-shadow: 1px -1px 0 rgba(#000, .3333);
					}
				}
				&.red {
					background: saturate(darken($color-frame-red, 16.67%), 6.25%);
				}
				&.green {
					background: saturate(darken($color-frame-green, 16.67%), 6.25%);
				}
				&.multicolor {
					background: saturate(darken($color-frame-multicolor, 12.5%), 6.25%);
				}
				.name,
				.type {
					text-shadow: -1px 1px 0 rgba(#fff, .0833);
				}
			}
			&:hover {
				z-index: index($layers, card-list-item-hover); // To make a hovered card button's glow overlap a focused-within card button's glow positioned directly below the other button. 
			}
			&:not(:hover) {
				.qty {
					&:focus-within {
						.qty-buttons {
							display: none;
						}
					}
				}
			}
			.qty {
				input {
					transition: none;
					color: $color-link;
				}
				> span {
					color: $color-text;
				}
			}
		}
		&:focus-within {
			z-index: index($layers, card-list-item-focus-within);
			
			.card-button {
				@include box-shadow-hover-card-button($color-frame-generic);
				
				&.land {
					@include box-shadow-hover-card-button(darken($color-frame-land, 8.33%));
				}
				&.white {
					@include box-shadow-hover-card-button(lighten($color-mana-white, 25%));
				}
				&.blue {
					@include box-shadow-hover-card-button(darken($color-mana-blue, 41.67%));
				}
				&.black {
					@include box-shadow-hover-card-button(darken($color-mana-black, 50%));
				}
				&.red {
					@include box-shadow-hover-card-button(desaturate(darken($color-mana-red, 33.33%), 25%));
				}
				&.green {
					@include box-shadow-hover-card-button(darken($color-mana-green, 37.5%));
				}
				&.multicolor {
					@include box-shadow-hover-card-button(saturate($color-mana-hybrid, 12.5%));
				}
			}
		}
		&:first-child {
			margin-top: 0;
		}
		&.gap-after {
			margin-bottom: divide($lhse, 4);
		}
		.name,
		.mana,
		.type {
			overflow: hidden;
			text-overflow: ellipsis;
			white-space: nowrap;
		}
		.mana,
		.rarity {
			margin-left: .5ch;
		}
		.name {
			margin: 0;
			font-size: 87.5%;
			line-height: 1.375;
			min-width: 33.33%;
			text-align: left;
			color: inherit;
		}
		.mana {
			display: flex;
			align-items: center;
			justify-content: flex-end;
			overflow: visible;
		}
		.type {
			@include heading-font;
			font-size: 75%;
			line-height: 1.5;
		}
		.rarity {
			margin-right: -$lhse*.0833;
		}
		.qty {
			display: flex;
			align-items: center;
			line-height: 1;
			width: $width-qty-column;
			
			> span {
				margin: 0 0 0 divide($lhse, 6);
				color: desaturate(darken($color-text, 25%), 12.5%);
				cursor: default;
			}
			label {
				@include screen-readers-only;
			}
			input {
				color: $color-text;
				background: transparent;
				border: 0;
				width: 1.375em;
				text-align: center;
				outline: 1px solid rgba($color-mythic-orange, 0);
				transition: all $transition-duration-standard ease-out;
				padding: 0 divide($lhse, 6) 0 0;
				margin: 0;
				font-weight: $font-weight-semibold;
				line-height: 1;
				border-radius: $border-radius-button;
				-moz-appearance: textfield;
				appearance: textfield;

				&::-webkit-inner-spin-button,
				&::-webkit-outer-spin-button {
					-webkit-appearance: none;
				}
				&:hover,
				&:focus {
					color: $color-link-focus;
					transition-duration: 0s;
				}
				&:focus {
					outline: 2px solid $color-link;
					background: $color-group-bg;
				}
			}
			&:focus-within,
			&:hover {
				.qty-buttons {
					display: flex;
				}
			}
			.qty-buttons {
				position: absolute;
				top: -$lhse*.3333;
				right: -$lhse*.75;
				z-index: 8;
				display: none;
				flex-direction: column;
			}
			button {
				@include primary-btn;
				font-family: sans-serif;
				font-size: 120%;
				min-width: auto;
				width: $lhse*.6667;
				height: $lhse*.6667;
				line-height: $lhse*.6667;
				padding: 0;
				margin: 0; 
				box-shadow:
					inset -.5px 1px 0 rgba(#fff, .25),
					$box-shadow-buttons,
					inset 0 .25em .5em $color-mythic-lighter;
				border-radius: 25%;
			}
			.increment {
				border-bottom-right-radius: 0;
				border-bottom-left-radius: 0;
				background: lighten($color-link, 6.25%);
			}
			.decrement {
				border-top-right-radius: 0;
				border-top-left-radius: 0;
				background: desaturate($color-link, 6.25%);
			}
		}
	}
	.card-button {
		background: $color-frame-generic;
		margin: 0;
		padding: 0;
		border-radius: $border-radius-button;
		border: 2px solid transparent;
		color: rgba(#000, .875);
		text-shadow: none;
		transition: all $transition-duration-standard ease;
		will-change: transform;
		filter: contrast(100%);
		width: 100%;
		align-items: center;
		box-shadow: -0.5px 1px 1px 1px rgba(#000, .25);

		&:hover,
		&:focus-within {
			color: #000;
		}
		&:active {
			transform: scale(.995) translate(0, .5px);
			transition-duration: 0s;
		}
		&.land {
			background: $color-frame-land;
		}
		&.white {
			background: $color-frame-white;
		}
		&.blue {
			background: $color-frame-blue;
		}
		&.black {
			background: $color-frame-black;
			color: #000;
		}
		&.red {
			background: $color-frame-red;
		}
		&.green {
			background: $color-frame-green;
		}
		&.multicolor {
			background: $color-frame-multicolor;
		}
	}
}

@media (max-width: $width-app-breakpoint-tablet) {
	@include condensed-card-buttons();

	.card-list {
		li {
			.qty {
				.qty-buttons {
					display: none !important;
				}
			}
		}
	}
}
@media (max-width: ($min-width-app * .8)) {
	@include long-card-buttons();

	.card-list {
		li {
			&:has(.qty:hover)	{
				border-radius: $border-radius-button;
			}
		}
	}
}
@media (max-width: ($min-width-app * .6667)) {
	@include condensed-card-buttons();
}
@media (pointer: coarse) {
	.card-list {
		.card-button {
			min-height: 27px; // 24px is the minimum passable size by WCAG's level "AA" accessibility guidelines. Then I've added a few extra pixels so that the list items appear to have consistent gaps between each other.
		}
	}
}
