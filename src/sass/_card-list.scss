@use "sass:color";

$border-width-card-button: 3px;
$width-qty-column: $lhse*1.5;
$min-height-card-list: $lhse*6;

@mixin box-shadow-hover-card-button($color) {
	box-shadow:
		0 0 0 .5px rgba(#000, .875),
		0 0 0 $border-width-card-button $color,
		.3333px -1px 0 ($border-width-card-button) color.scale($color,
			$lightness: 50%
		),
		-.3333px 1px 0 ($border-width-card-button) color.scale($color,
			$lightness: -50%, $saturation: -66.67%
		),
		0 -1px divide($lhse, 4) $border-width-card-button rgba(#000, .25);
}
@mixin color-card-buttons($background-color) {
	background: $background-color;
	color: color.scale($background-color, $lightness: -87.5%);
}
@mixin long-card-buttons {
	.card-list {
		max-width: $max-width-content;

		.active-card-list {
			align-self: center;
			width: 100%;
			max-width: 100%;
		}
		.list-headings {
			display: flex;

			.card-label-group {
				&:first-of-type {
					padding-right: divide($lhse, 2);
				}
				&:nth-of-type(2) {
					padding-left: .75em;
				}
			}
			.name {
				margin-left: $lhse*.125;
			}
			.mana {
				margin-right: -$lhse*.25;
			}
			.rarity {
				margin-right: $lhse*.0833;
			}
		}
		.card-button {
			display: flex;
			height: 23px;
		}
		.card-label-group {
			width: 50%;
			padding: 0 divide($lhse, 6);

			&:last-of-type {
				border-top: none;
				margin-top: 0;
				padding-left: .8333em;
			}
		}
		li {
			&:has(.qty:hover)	{
				border-top-right-radius: 0;
				border-bottom-right-radius: 0;
			}
			.rarity {
				margin-right: -$lhse*.0625;
			}
		}
	}
}
@mixin condensed-card-buttons {
	.card-list {
		.active-card-list {
			max-width: $max-width-content*.5;
		}
		.list-headings {
			display: none;
		}
		.card-button {
			display: block;
			height: 51px;
		}
		.card-label-group {
			width: 100%;
			padding: 0 divide($lhse, 4);

			&:last-of-type {
				border-top: 1px solid rgba(#000, .125);
				padding-left: divide($lhse, 4);
			}
		}
		li {
			&:has(.qty:hover)	{
				border-radius: $border-radius-button;
			}
			.rarity {
				margin-right: 0;
			}
		}
	}
}

@include long-card-buttons;

.card-list {
	margin-bottom: divide($lhse, 4);
	min-height: $min-height-card-list;
	display: flex;
	flex-direction: column;
	
	&.main-deck {
		> header {
			@include screen-readers-only;
		}
	}
	.no-cards {
		display: flex;
		justify-content: center;
		align-items: center;
		text-align: center;
		line-height: $line-height-standard*.875;
		min-height: $min-height-card-list;
		text-shadow: $text-shadow-over-light-bg;
		padding: $lhse*.5;
		color: $color-text-brighter;
	}
	.list-headings {
		display: flex;
		text-shadow: $text-shadow-over-light-bg;
		cursor: default;
		margin-bottom: $lhse*.125;
		
		strong {
			display: block;
			@include label-text-style;
		}
		.qty {
			text-align: center;
			margin-right: -$lhse*.25;
		}
		[title] {
			cursor: help;
		}
	}
	.card-label-group {
		display: flex;
		align-items: center;
		justify-content: space-between;
	}
	.qty-label-group {
		width: $width-qty-column;
	}
	ul {
		margin: 0;
		padding: 0;
		list-style: none;
		position: relative;
	}
	li {
		display: flex;
		margin: 1px 0;
		padding: 0;
		transition: .5s cubic-bezier(.5, 0, 0, 1); // For card sorting
		transition-property: transform, background-color;
		position: relative;
		background: $color-group-bg;
		border-radius: $border-radius-button;
		
		&:last-of-type {
			margin-bottom: $lhse*.25;
		}
		&:hover,
		&:focus-within {
			.card-button {
				filter: contrast(116.67%);
				transition-duration: 0s;
				transition-property: filter, box-shadow, border-color;
				border-top-color: rgba(#fff, .5);
				border-right-color: rgba(#fff, .25);
				border-bottom-color: rgba(#000, .5);
				border-left-color: rgba(#000, .25);
			}
			&:hover {
				z-index: index($layers, card-list-item-hover); // To make a hovered card button's glow overlap a focused-within card button's glow positioned directly below the other button. 
			}
			&:not(:hover) {
				.qty {
					&:focus-within {
						.qty-buttons {
							display: none;
						}
					}
				}
			}
			.qty {
				> span {
					color: desaturate(darken($color-text, 16.67%), 8.33%);
					transition-duration: 0s;
				}
				input {
					transition: none;
					color: $color-link;

					&:hover,
					&:focus {
						color: $color-link-focus;
					}
				}
			}
		}
		&:focus-within {
			z-index: index($layers, card-list-item-focus-within);
			
			.card-button {
				@include box-shadow-hover-card-button(darken($color-frame-generic, 4.17%));
				
				&.land {
					@include box-shadow-hover-card-button(darken($color-frame-land, 16.67%));
				}
				&.white {
					@include box-shadow-hover-card-button(lighten($color-mana-white, 25%));
				}
				&.blue {
					@include box-shadow-hover-card-button(desaturate(darken($color-mana-blue, 40%), 16.67%));
				}
				&.black {
					@include box-shadow-hover-card-button(darken($color-mana-black, 41.67%));
				}
				&.red {
					@include box-shadow-hover-card-button(desaturate(darken($color-mana-red, 29.17%), 25%));
				}
				&.green {
					@include box-shadow-hover-card-button(desaturate(darken($color-mana-green, 25%), 16.67%));
				}
				&.multicolor {
					@include box-shadow-hover-card-button(desaturate($color-mana-hybrid, 16.67%));
				}
			}
		}
		&:first-child {
			margin-top: 0;
		}
		&.gap-after {
			margin-bottom: divide($lhse, 4);
		}
		.name,
		.mana,
		.type {
			overflow: hidden;
			text-overflow: ellipsis;
			white-space: nowrap;
		}
		.mana,
		.rarity {
			margin-left: .5ch;
		}
		.name {
			margin: 0;
			font-size: 87.5%;
			line-height: 1.375;
			min-width: 33.33%;
			text-align: left;
			color: inherit;
		}
		.mana {
			overflow: visible;
			margin-top: -3px;
			display: flex;
			align-items: center;
			
			.mana-symbol {
				box-shadow: -.75px 1.6667px 0 0 #000; // Needs to look good on Firefox
				margin: 0 0 0 2px;
			}
		}
		.type {
			@include heading-font;
			font-size: 75%;
			line-height: 1.5;
		}
		.qty {
			display: flex;
			align-items: center;
			justify-content: flex-end;
			line-height: 1;
			width: $width-qty-column;
			padding-right: 2px;
			
			> span {
				margin: -4.17% 0 0 divide($lhse, 6);
				color: desaturate(darken($color-text, 33.33%), 16.67%);
				cursor: default;
				text-indent: -1.5px; // Using text-indent instead of margin to prevent disrupting other elements' positions.
				transition: color $transition-duration-standard ease;
			}
			label {
				@include screen-readers-only;
			}
			input {
				color: $color-text;
				background: none;
				border: 0;
				width: auto;
				min-width: 0;
				text-align: center;
				outline: 1px solid rgba($color-mythic-orange, 0);
				transition: all $transition-duration-standard ease-out;
				padding: 0 0 0 0;
				margin: -4.17% 0 0 0;
				font: $font-weight-semibold #{100%}/#{1} $font-family-standard;
				border-radius: $border-radius-button;
				appearance: textfield;

				&::-webkit-inner-spin-button,
				&::-webkit-outer-spin-button {
					-webkit-appearance: none;
				}
				&:hover,
				&:focus {
					color: $color-link;
					transition-duration: 0s;
				}
				&:focus {
					color: $color-link-focus;
					outline: 2px solid $color-link;
				}
			}
			&:focus-within,
			&:hover {
				.qty-buttons {
					display: flex;
				}
			}
			.qty-buttons {
				position: absolute;
				top: divide($lhse, -3);
				right: -1.6em;
				z-index: index($layers, card-list-item-hover);
				display: none;
				flex-direction: column;
				height: auto;
			}
			button {
				border-bottom-width: 2px;
				font: normal 133.33%/.8333 sans-serif;
				min-width: auto;
				width: 1.25em;
				height: $lhse*.6667;
				max-height: none;
				padding: 0;
				overflow: hidden;
			}
			.increment {
				border-bottom-right-radius: 0;
				border-bottom-left-radius: 0;
				background: radial-gradient(ellipse at 50% 100%,
					$color-button-mythic-lighter,
					$color-button-mythic-orange
				);
			}
			.decrement {
				border-top-right-radius: 0;
				border-top-left-radius: 0;
				background: radial-gradient(ellipse at 50% 0%,
					$color-button-mythic-lighter,
					$color-button-mythic-orange
				);
			}
		}
	}
	.card-button {
		@include color-card-buttons($color-frame-generic);
		margin: 0;
		padding: 0;
		border-radius: $border-radius-button;
		border: 2px solid transparent;
		text-shadow: none;
		transition: all $transition-duration-standard ease;
		filter: contrast(100%);
		width: 100%;
		align-items: center;
		box-shadow: -0.5px 1px 1px 1px rgba(#000, .25);

		&:hover,
		&:focus-within {
			color: #000;
		}
		&:active {
			transform: scale(.995) translate(0, .5px);
			transition-duration: 0s;
		}
		&.land {
			@include color-card-buttons($color-frame-land);
		}
		&.white {
			@include color-card-buttons($color-frame-white);
		}
		&.blue {
			@include color-card-buttons($color-frame-blue);
		}
		&.black {
			background: $color-frame-black;
			color: #000;
			text-shadow: 0 0 1px rgba(#fff, .3333);
		}
		&.red {
			@include color-card-buttons($color-frame-red);
		}
		&.green {
			@include color-card-buttons($color-frame-green);
		}
		&.multicolor {
			@include color-card-buttons($color-frame-multicolor);
		}
	}
	.card-list-main-leave-active {
		transition-duration: 0s; // When switching from one deck page to another, this stops the odd lingering of the previous deck list on the current page.
	}
}

@media (max-width: $width-app-breakpoint-tablet) {
	@include condensed-card-buttons();

	.card-list {
		li {
			.qty {
				.qty-buttons {
					display: none !important;
				}
			}
		}
	}
}
@media (max-width: ($min-width-app * .8)) {
	@include long-card-buttons();

	.card-list {
		li {
			&:has(.qty:hover)	{
				border-radius: $border-radius-button;
			}
		}
	}
}
@media (max-width: ($min-width-app * .6667)) {
	@include condensed-card-buttons();
}

@media (pointer: coarse) {
	.card-list {
		.card-button {
			min-height: 27px; // 24px is the minimum passable size by WCAG's level "AA" accessibility guidelines. Then I've added a few extra pixels so that the list items appear to have consistent gaps between each other.
		}
	}
}
