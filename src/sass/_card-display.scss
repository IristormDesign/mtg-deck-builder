@keyframes card-fan-in {
	0% {
		opacity: 0;
		transform: rotate(-5.625deg) translateX(-$lhse*6) translateY(-$lhse*2) scale(1.0833);
	}
	38.20% {
		opacity: 1;
	}
}
@keyframes overshadowed {
	0% {
		filter: brightness(100%);
	}
	100% {
		filter: brightness(50%);
	}
}
$transition-delay-card: divide(1, 3) * 1s;

.card-display {
	position: sticky;
	top: calc(
		#{$lhse*.5} + var(--header-height) + var(--header-top)
	);
	transition: top $transition-duration-standard ease;
	width: 25vw;
	height: 100%;
	aspect-ratio: #{488} / #{680}; // Numbers are equal to actual card image's width and height.
	max-height: 100vh;
	z-index: index($layers, card-overlay);

	.card-edge {
		filter: $drop-shadow-card-image-edge;
		transition: filter $transition-duration-card-image-hover-fast ease 0s;
		position: absolute;
		width: 100%;
		will-change: transform; // This prevents a slight visual jump after a card overlays another in Chrome.

		&:hover,
		&:focus-within {
			filter:
				$drop-shadow-card-image-edge
			 	drop-shadow(0 $lhse*.5 $lhse rgba(#000, .5));
			transition-duration: $transition-duration-card-image-hover-slow;
			transition-delay: $transition-delay-card;
			will-change: auto;
		}
	}
	a {
		position: absolute;
		display: block;
		mask-image: url('~@/img/card-mask.svg');
		background: desaturate(darken($color-frame-generic, 33.33%), 4.17%);
		box-shadow: inset 0 0 0 10px lighten(#000, 8.33%); // Black card border without card image
		transition: $transition-duration-card-image-hover-fast ease 0s;
		transition-property: transform, filter;

		&:hover,
		&:focus {
			transform:
				scale(1.3333)
				translate($lhse*1.3333, $lhse*1.6667)
			;
			transition-duration: $transition-duration-card-image-hover-slow;
			transition-delay: $transition-delay-card;
			will-change: auto;
		}
		&:active {
			filter: brightness(120%);
			transition-duration: 0s;
			transition-delay: 0s;
		}
		&.land {
			background: desaturate(darken($color-frame-land, 37.5%), 0%);
		}
		&.W {
			background: desaturate(darken($color-frame-white, 16.67%), 8.33%);
			
			.loading-indicator {
				color: #000;
			}
		}
		&.U {
			background: desaturate(darken($color-frame-blue, 50%), 8.33%);
		}
		&.B {
			background: desaturate(darken($color-frame-black, 50%), 0%);
		}
		&.R {
			background: desaturate(darken($color-frame-red, 50%), 8.33%);
		}
		&.G {
			background: desaturate(darken($color-frame-green, 50%), 8.33%);
		}
		&.multicolor {
			background: desaturate(darken($color-frame-multicolor, 25%), 16.67%);
		}
	}
	img {
		display: block;
		width: auto;
		max-height: calc(100vh - #{$lhse});
		position: relative;
	}
	.close {
		display: none;
	}
}

$animation-duration-card-browse: .3820s;

.card-browse {
	&-enter-active {
		z-index: 1;
		animation: card-fan-in $animation-duration-card-browse cubic-bezier(0, 0, .25, 1);
	}
	&-leave-active {
		animation: overshadowed $animation-duration-card-browse ease-out;
	}
}
.card-browse-appear-active {
	@extend .card-browse-enter-active;
	animation-delay: $transition-duration-standard;
	animation-duration: $animation-duration-card-browse*1.5;
	animation-fill-mode: backwards;
}

@media (min-width: ($max-width-app*.8333)) { // Note this media query is for MIN-width, not max-width.
	.card-display {
		a {
			&:hover,
			&:focus {
				transform:
					scale(1.2)
					translate(0, $lhse*1.6)
				;
			}
		}
	}
}
@media (max-width: $width-app-breakpoint-tablet) {
	.card-display {
		width: 50%;
	}
}
@media (max-width: 768px) { // Must match window width in JavaScript.
	.card-display {
		z-index: index($layers, app-header);
		width: auto;
		aspect-ratio: auto;

		.card-edge {
			display: flex;
			justify-content: center;
			align-items: center;
			width: 100%;
			height: 100%;
			will-change: auto;

			&,
			&:hover,
			&:focus-within {
				filter: drop-shadow(0 0 $lhse rgba(#fff, .1667));
			}
		}
		a {
			position: static;
			margin: $lhse*.5;

			&:hover,
			&:focus {
				transform: none;
			}
		}
		img {
			max-width: 91.67vw;
			max-height: 91.67vh;
		}
		.card-browse-leave-active {
			display: none;
		}
		.close {
			@include secondary-button;
			display: block;
			position: absolute;
			top: $lhse*.3333;
			right: $lhse*.25;
			min-width: $lhse;
			padding: 0;
		}
	}
	.cd-overlay {
		@include overlay-bg;
	}
	.cd-overlay-fade {
		&-enter-active,
		&-leave-active {
			transition: opacity .3333s ease;
		}
		&-leave-active {
			transition-duration: .1667s;
		}
		&-enter,
		&-leave-to {
			opacity: 0;
		}
	}
	.card-browse {
		&-enter-active {
			animation: none;
		}
		&-leave-active {
			animation: none;
		}
	}
}
