.card-display {
	position: sticky;
	top: divide($lhse, 2);
	width: 25vw;
	height: 680px * .75;
	max-height: 100vh;

	.card-display-container {
		display: flex;
		justify-content: flex-end;
		filter: drop-shadow(-.6667px 2px 1px rgba(#000, .25));
	}
	a {
		position: absolute;
		display: block;
		mask-image: url('~@/img/card-mask.svg');
		background: desaturate(darken($color-frame-generic, 37.5%), 0%);
		box-shadow: inset 0 0 0 12px #000; // Black card border without card image
		max-width: 488px * .75; // Pixel value equal to actual width of card images.
		max-height: 680px * .75; // Pixel value equal to actual height of card images.

		&:focus-visible {
			filter: brightness(125%);
		}
		&.land {
			background: desaturate(darken($color-frame-land, 40%), 0%);
		}
		&.W {
			background: desaturate(darken($color-frame-white, 20%), 20%);
			
			.loading-indicator {
				color: #000;
			}
		}
		&.U {
			background: desaturate(darken($color-frame-blue, 50%), 16.67%);
		}
		&.B {
			background: desaturate(darken($color-frame-black, 41.67%), 0%);
		}
		&.R {
			background: desaturate(darken($color-frame-red, 50%), 8.33%);
		}
		&.G {
			background: desaturate(darken($color-frame-green, 50%), 8.33%);
		}
		&.multicolor {
			background: desaturate(darken($color-frame-multicolor, 37.5%), 25%);
		}
	}
	.loading-indicator {
		display: flex;
		align-items: center;
		justify-content: center;
		width: 100%;
		height: 100%;
		animation: fade-in 2s ease;
		position: absolute;
		top: 0;
		font-style: italic;
		color: #fff;
		font-size: 112.5%;
		
		@keyframes fade-in {
			0% {
				opacity: 0;
			}
			50% {
				opacity: 0;
			}
			100% {
				opacity: 1;
			}
		}
	}
	img {
		display: block;
		width: auto;
		max-height: calc(100vh - #{$lhse});
		position: relative;
		will-change: transform;
	}
	.close {
		display: none;
	}
}

$animation-duration-card-browse: .375s;

.card-browse {
	&-enter-active {
		z-index: 1;
		animation: card-fan-in $animation-duration-card-browse cubic-bezier(0, 0, .25, 1);
	}
	&-leave-active {
		animation: overshadowed $animation-duration-card-browse ease-out;
	}
}
.card-browse-appear-active {
	@extend .card-browse-enter-active;
	animation-delay: $transition-duration-standard;
	animation-duration: $animation-duration-card-browse*1.5;
	animation-fill-mode: backwards;
}

@keyframes card-fan-in {
	0% {
		opacity: 0;
		transform: rotate(-5.625deg) translateX(-$lhse*6) translateY(-$lhse) scale(1.0625);
	}
	37.5% {
		opacity: 1;
	}
}
@keyframes overshadowed {
	0% {
		filter: brightness(100%);
	}
	100% {
		filter: brightness(25%);
	}
}

@media (max-width: $width-app-breakpoint-tablet) {
	.card-display {
		width: 50%;
	}
}
@media (max-width: 768px) { // Must match window width in JavaScript.
	.card-display {
		z-index: index($layers, card-overlay);
		width: auto;
		height: auto;
		
		.card-display-container {
			@include overlay-bg;
			will-change: opacity;
			position: fixed;
			display: flex;
			justify-content: center;
			align-items: center;
			filter: none;
		}
		a {
			max-width: (488px * .75);
			max-height: (680px * .75);
		}
		img {
			max-height: calc(100vh - $lhse*.5);
		}
		.card-browse-leave-active {
			display: none;
		}
		.close {
			@include secondary-button;
			display: block;
			position: absolute;
			top: $lhse*.25;
			right: $lhse*.25;
			min-width: $lhse;
			padding: 0;
			z-index: index($layers, card-overlay);
		}
	}
	.cdo-fade {
		&-enter-active,
		&-leave-active {
			transition: opacity .25s ease-out;
		}
		&-leave-active {
			transition-duration: .125s;
		}
		&-enter,
		&-leave-to {
			opacity: 0;
		}
	}
}
