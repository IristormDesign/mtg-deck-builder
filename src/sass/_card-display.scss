@keyframes card-fan-in {
	0% {
		opacity: 0;
		transform: rotate(-5.625deg) translateX(-$lhse*6) translateY(-$lhse*2) scale(1.0833);
	}
	37.5% {
		opacity: 1;
	}
}
@keyframes overshadowed {
	0% {
		filter: brightness(100%);
	}
	100% {
		filter: brightness(50%);
	}
}

.card-display {
	position: sticky;
	top: calc(
		#{$lhse*.5} + var(--header-height) + var(--header-top)
	);
	transition: top $transition-duration-standard ease;
	width: 25vw;
	height: 680px * .75;
	max-height: 100vh;
	z-index: index($layers, card-overlay);

	.card-display-container {
		display: flex;
		justify-content: flex-end;
		filter: drop-shadow(-.6667px 2px 1px rgba(#000, .25));
		transition: filter $transition-duration-card-image-hover-fast ease;

		&:has(a:hover),
		&:has(a:focus) {
			filter:
				drop-shadow(0 $lhse*.5 $lhse rgba(#000, .5))
			;
			transition-duration: $transition-duration-card-image-hover-slow;
		}
	}
	.card-edge {
		filter: $drop-shadow-card-image-edge;
		width: 100%;
		height: 100%;
		position: absolute;
	}
	a {
		display: block;
		mask-image: url('~@/img/card-mask.svg');
		background: desaturate(darken($color-frame-generic, 33.33%), 4.17%);
		box-shadow: inset 0 0 0 12px #000; // Black card border without card image
		max-width: 488px * .75; // Pixel value equal to actual width of card images.
		max-height: 680px * .75; // Pixel value equal to actual height of card images.
		transition: $transition-duration-card-image-hover-fast ease;
		transition-property: transform, filter;
		will-change: transform; // This prevents a slight visual jump when a card overlays another.

		&:hover,
		&:focus {
			transform:
				scale(1.3333)
				translate($lhse*1.3333, $lhse*1.6667)
			;
			transition-duration: $transition-duration-card-image-hover-slow;
			will-change: auto; // Reset to `auto` when the card image enlarges on hover so that the text appears a little sharper.
		}
		&:active {
			filter: brightness(120%);
			transition-duration: 0s;
		}
		&.land {
			background: desaturate(darken($color-frame-land, 37.5%), 0%);
		}
		&.W {
			background: desaturate(darken($color-frame-white, 16.67%), 8.33%);
			
			.loading-indicator {
				color: #000;
			}
		}
		&.U {
			background: desaturate(darken($color-frame-blue, 50%), 8.33%);
		}
		&.B {
			background: desaturate(darken($color-frame-black, 50%), 0%);
		}
		&.R {
			background: desaturate(darken($color-frame-red, 50%), 8.33%);
		}
		&.G {
			background: desaturate(darken($color-frame-green, 50%), 8.33%);
		}
		&.multicolor {
			background: desaturate(darken($color-frame-multicolor, 33.33%), 16.67%);
		}
	}
	img {
		display: block;
		width: auto;
		max-height: calc(100vh - #{$lhse});
		position: relative;
	}
	.close {
		display: none;
	}
}

$animation-duration-card-browse: .3820s;

.card-browse {
	&-enter-active {
		z-index: 1;
		animation: card-fan-in $animation-duration-card-browse cubic-bezier(0, 0, .25, 1);
	}
	&-leave-active {
		animation: overshadowed $animation-duration-card-browse ease-out;
	}
}
.card-browse-appear-active {
	@extend .card-browse-enter-active;
	animation-delay: $transition-duration-standard;
	animation-duration: $animation-duration-card-browse*1.5;
	animation-fill-mode: backwards;
}

@media (min-width: ($max-width-app*.8333)) { // Note this media query is for MIN-width, not max-width.
	.card-display {
		a {
			&:hover,
			&:focus {
				transform:
					scale(1.2)
					translate(0, $lhse*1.6)
				;
			}
		}
	}
}
@media (max-width: $width-app-breakpoint-tablet) {
	.card-display {
		width: 50%;
	}
}
@media (max-width: 768px) { // Must match window width in JavaScript.
	.card-display {
		z-index: index($layers, app-header);
		width: auto;
		height: auto;
		
		.card-display-container {
			@include overlay-bg;
			position: fixed;
			display: flex;
			justify-content: center;
			align-items: center;
			filter: none;
			transition-duration: 0s;
			
			&:has(a:hover),
			&:has(a:focus) {
				filter: none;
			}
		}
		.card-edge {
			max-width: (488px * .75);
			max-height: (680px * .75);
			filter: drop-shadow(0 0 $lhse rgba(#fff, .25));
		}
		a {
			will-change: auto;

			&:hover,
			&:focus {
				transform: none;
			}
		}
		img {
			max-height: calc(100vh - $lhse*.5);
		}
		.card-browse-leave-active {
			display: none;
		}
		.close {
			@include secondary-button;
			display: block;
			position: absolute;
			top: $lhse*.25;
			right: $lhse*.25;
			min-width: $lhse;
			padding: 0;
			z-index: index($layers, card-overlay);
		}
		.cdo-fade {
			&-enter-active,
			&-leave-active {
				transition: opacity $transition-duration-standard ease !important; // For some reason, the transition duration is inconsistent among cards unless I add `!important`.
			}
			&-leave-active {
				transition-duration: $transition-duration-standard*.5 !important;
			}
			&-enter,
			&-leave-to {
				opacity: 0;
			}
		}
		.card-browse {
			&-enter-active {
				animation: none;
			}
			&-leave-active {
				animation: none;
			}
		}
	}
}
