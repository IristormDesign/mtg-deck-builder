@use 'variables-and-mixins' as *;

/* I've made the dialog exit transition duration 0s because Safari doesn't work well with it. */

$transition-duration-dialog: .5s;

dialog {
	background: $color-group-bg;
	color: $color-text;
	padding: $lhse*.75 $lhse;
	width: fit-content;
	max-width: $max-width-content*.875;
	border: 1px solid $color-button-orange;
	opacity: 0;
	filter: brightness(1) saturate(1);
	box-shadow: $box-shadow-popups;
  transition: all 0s ease allow-discrete;

	&::backdrop {
		@include dialog-backdrop;
		transition: all 0s ease allow-discrete;
		opacity: 0;
	}
	&[open] {
		display: block;
		opacity: 1;
		transition-duration: $transition-duration-dialog;

		&::backdrop {
			opacity: 1;
			transition-duration: $transition-duration-dialog;
		}
	}
	:first-child {
		margin-top: 0;
	}
	> h4 {
		@include pronounced-heading;
	}
	p {
		text-wrap: pretty;
	}
	form {
		min-height: $lhse*1.5;
		display: flex;
		align-items: center;
		gap: $lhse $lhse*.5;
		justify-self: center;
	}
	.button-container {
		height: $lhse*1.5;
	}
	button {
		font-size: 83.33%;
		min-height: $lhse*1.5;
		margin-right: auto;
		margin-left: auto;

		&.cancel {
			background: $color-button-gray;
		}
	}
	&.with-two-buttons,
	&.with-text-input {
		form {
			display: grid;
			grid-template-columns: 1fr auto auto 1fr;
			width: 100%;
			margin-top: $lhse*.75;
			gap: 0 $lhse;
		}
		input {
			grid-column: span 4;
			max-width: 20em;
			width: 100%;
			text-align: center;
			margin: 0 auto $lhse;
			height: $lhse*1.25;
			min-width: $lhse*12;
		}
		.button-container {
			grid-row: 2;

			&:first-of-type {
				grid-column-start: 2;
			}
			&:last-of-type {
				grid-column-start: 3;
			}
		}
	}
}
@starting-style {
  dialog[open] {
    opacity: 0;
		filter: brightness(2.5) saturate(1.25);

		&::backdrop {
			opacity: 0;
		}
  }
}

@media (max-width: ($min-width-app * .4)) {
	dialog {
		&.with-two-buttons,
		&.with-text-input {
			form {
				grid-template-columns: auto auto;
			}
			input {
				grid-column: span 2;
			}
			.button-container {
				&:first-of-type,
				&:last-of-type {
					grid-column-start: unset;
					justify-content: flex-start;
				}
				&:first-of-type {
					justify-content: flex-end;
				}
				button {
					margin-right: 0;
					margin-left: 0;
				}
			}
		}
	}
}
