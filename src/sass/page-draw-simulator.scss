@import 'variables';
$width-card-list-section-wide:
	$width-card-bars-wide + $width-card-star;
$width-card-list-section-narrow:
	$width-card-bars-narrow + $width-card-star;

.draw-simulator {
	margin: 0 auto $lhse*.5;
	display: grid;
	grid-template-areas:
		'panel card-img'
		'card-list card-img';
	grid-template-rows: min-content 100%;
	gap: $margin-card-gap-after $lhse*.5;
	justify-content: center;

	.layout-column {
		background: $color-group-bg;
		border-radius: $border-radius-group;
		width: $width-card-list-section-wide;
	}
	.card-browse-appear-active {
		animation-delay: 0s; // This purposely prevents the delay in the card image that normally happens when arriving on a deck page, but that I don't want on the draw simulator page.
	}
	.control-panel {
		display: grid;
		grid-template-columns: 1fr 1fr 2fr;
		align-items: center;
		overflow: hidden;
		height: $height-deck-header-component;
		border-bottom-right-radius: 0;
		border-bottom-left-radius: 0;
		width: 100%;
	}
	.deck-info {
		@include deck-info-style;
		order: 0;

		h3 {
			white-space: normal;
			width: min-content;
		}
		.output {
			font-size: 200%;
			min-width: 2.6667ch;
			color: $color-text;
			justify-content: center;
			align-items: center;
			display: flex;
			font-weight: $font-weight-label;
		}
		.warning-symbol {
			margin-left: .25em;
			display: block;
		}
	}
	.button-container {
		display: flex;
		justify-content: space-evenly;

		button {
			min-height: $lhse*1.5;
			font-size: 87.5%;
			touch-action: manipulation; // Prevents the page zoom-in effect on mobile devices when double-tapping on this button.
		}
		.restart {
			background: $color-button-gray;
			font-size: 87.5% * .8333;
		}
	}
	.card-list-section {
		height: min-content;
		min-height: 0;
		border-bottom-right-radius: $border-radius-group;
		border-bottom-left-radius: $border-radius-group;
		border-bottom-width: 0;
		padding-right: $lhse*.5;
		padding-left: $lhse*.25;

		li {
			&:nth-last-of-type(8) {
				margin-bottom: $margin-card-gap-after;
			}
		}
	}
}

@media (max-width: $width-app-breakpoint-tablet) {
	.draw-simulator {
		.layout-column {
			width: auto;
		}
		.control-panel {
			grid-template-rows: repeat(2, $height-deck-header-component);
			grid-template-columns: repeat(2, 1fr);
			height: auto;
			justify-self: center
		}
		.deck-info {
			@include deck-info-box-wide;
			grid-column: span 1;
			border-bottom: $border-sections;

			&:nth-of-type(2) {
				margin-right: 0;
				border-right-width: 0;
			}
		}
		.button-container {
			display: flex;
			justify-content: space-evenly;
			grid-column: span 2;

			button {
				padding-right: $lhse*.75;
				padding-left: $lhse*.75;
			}
		}
		.no-cards {
			max-width: $lhse*15;
			margin-right: auto;
			margin-left: auto;
			padding-right: $lhse;
			padding-left: $lhse;
			border-radius: $border-radius-group;
		}
	}
}
@media (max-width: ($min-width-app * .75)) {
	.draw-simulator {
		max-width: $max-width-deck-page-layout;
		grid-template-columns: 100%;
		grid-template-areas:
			'panel'
			'card-list';
		gap: $margin-card-gap-after 0;

		.deck-info {
			&:nth-of-type(2) {
				grid-column: span 1;
			}
		}
	}
}
@media (max-width: ($min-width-app * .6)) {
	.draw-simulator {
		.control-panel {
			grid-template-rows: 1fr 1fr;
		}
		.deck-info {
			@include deck-info-box-narrow;
			padding-top: $lhse*.25;
			padding-bottom: $lhse*.25;

			.output {
				min-width: auto;
			}
		}
	}
}
@media (max-width: ($min-width-app * .4)) {
	.draw-simulator {
		max-width: 100vw;
		margin-bottom: 0;
		width: 100%;

		.layout-column {
			border-radius: 0;
		}
		.control-panel {
			grid-template-rows: auto $height-deck-header-component;
			width: 100%;
			border-radius: 0;
		}
		.deck-info {
			h3 {
				width: min-content
			}
		}
		.no-cards {
			border-radius: 0;
		}
	}
}
