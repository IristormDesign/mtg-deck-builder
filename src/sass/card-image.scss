@import 'variables';
$height-card-image-section: #{680px * .6667};
$transition-delay-card: divide(1, 3) * 1s;
$animation-duration-card-browse: .3820s;
$drop-shadow-card-shadow: drop-shadow(0 $lhse*.5 $lhse*.75 rgba(#000, .6667));

@mixin card-fan-in-from ($enter-from) {
	$transform: none;

	@if $enter-from == 'left' {
		$transform: rotate(-5.625deg) translateX(-$lhse*6)
	}
	@if $enter-from == 'right' {
		$transform: rotate(5.625deg) translateX($lhse*6);
	}

	@keyframes card-fan-in-#{$enter-from} {
		0% {
			opacity: 0;
			transform: $transform translateY(-$lhse*2) scale(1.0833);
		}
		38.20% {
			opacity: 1;
		}
	}

	animation-name: card-fan-in-#{$enter-from};
}
@mixin card-link ($rise-from) {
	$translate: none;
	$rotate: none;

	@if $rise-from == 'left' {
		$translate: translate($lhse*1.375, $lhse*2);
		$rotate: rotate((-360/192) * 1deg);
	}
	@if $rise-from == 'right' {
		$translate: translate(-$lhse*1.375, $lhse*2);
		$rotate: rotate((360/192) * 1deg);
	}

	a {
		position: absolute;
		display: block;
		transition: $transition-duration-card-image-hover-fast ease 0s;
		transition-property: transform, filter;
		border-radius: $border-radius-group;
		outline-offset: 0px;

		&:hover,
		&:focus {
			transform:
				scale(1.3333)
				$translate
				$rotate;
			transition-duration: $transition-duration-card-image-hover-slow;
			transition-delay: $transition-delay-card;
		}
		&:focus {
			transition-delay: 0s;
		}
		&:active {
			filter: contrast(125%);
			transition-duration: 0s;
			transition-delay: 0s;
		}
	}
}
@mixin card-edge-filters ($position) {
	$color-card-edge: darken(#fff, 66.67%);

	@if $position == 'left' {
		filter: drop-shadow(1px 1px 0 $color-card-edge);
	}
	@if $position == 'right' {
		filter: drop-shadow(-1px 1px 0 $color-card-edge);
	}
}

@keyframes overshadowed {
	0% {
		filter: brightness(100%);
	}
	100% {
		filter: brightness(50%);
	}
}

.card-image {
	grid-area: card-img;
	position: sticky;
	top: $lhse*.5;
	z-index: index($layers, card-overlay);
	height: min-content; // Needed so that the app footer links positioned directly beneath the card image can still be clicked.

	.image-container {
		transition: top $transition-duration-standard ease;
		width: min(#{488px * .6667}, 25vw);
		max-height: $height-card-image-section;
		aspect-ratio: 488 / 680;
		position: relative;
		z-index: 1;
		margin: 0 auto;
	}
	.card-placement-outline {
		position: absolute;
		height: 100%;
		width: auto;
		max-height: calc(100vh - #{$lhse});
		aspect-ratio: 488 / 680;
		outline: divide($lhse, 3) dashed rgba($color-text-brighter, .2);
		outline-offset: -$lhse*.75;
	}
	.card-shadow {
		position: absolute;
		width: 100%;
		transition: filter $transition-duration-card-image-hover-fast ease;
		will-change: transform, filter; // This prevents a slight visual jump after a card overlays another in Chrome.

		&:hover,
		&:focus-within {
			filter: $drop-shadow-card-shadow;
			transition-duration: $transition-duration-card-image-hover-slow;
			transition-delay: $transition-delay-card;
			will-change: auto;
		}
		&:focus-within {
			transition-delay: 0s;
		}
	}
	.card-shape {
		mask-image: url('~@/img/card-mask.svg');
		box-shadow: inset 0 0 0 10px lighten(#000, 8.33%); // Black card border without card image
		background: desaturate(darken($color-frame-generic, 33.33%), 4.17%);

		&.land {
			background: desaturate(darken($color-frame-land, 37.5%), 0%);
		}
		&.W {
			background: desaturate(darken($color-frame-white, 16.67%), 8.33%);

			.loading-indicator {
				color: #000;
			}
		}
		&.U {
			background: desaturate(darken($color-frame-blue, 50%), 8.33%);
		}
		&.B {
			background: desaturate(darken($color-frame-black, 50%), 0%);
		}
		&.R {
			background: desaturate(darken($color-frame-red, 50%), 8.33%);
		}
		&.G {
			background: desaturate(darken($color-frame-green, 50%), 8.33%);
		}
		&.multi {
			background: desaturate(darken($color-frame-multi, 25%), 16.67%);
		}
	}
	img {
		display: block;
		width: auto;
		max-height: calc(100vh - #{$lhse});
		position: relative;
	}
	.close {
		display: none;
	}
	.turn-over-button-transition {
		&-enter-active,
		&-leave-active {
			transition: opacity $transition-duration-standard ease-out;
		}
		&-enter-active {
			transition-delay: $animation-duration-card-browse;
		}
		&-enter,
		&-leave-to {
			opacity: 0;
		}
	}
	.turn-over {
		display: flex;
		justify-content: center;
		align-items: flex-end;
		min-height: $lhse*1.6667;

		button {
			font-size: 80%;
			height: $lhse*1.5;
		}
	}
}
.card-browse {
	&-enter-active {
		animation: $animation-duration-card-browse cubic-bezier(0, 0, .25, 1);
		z-index: 1;
	}
	&-leave-active {
		animation: overshadowed $animation-duration-card-browse ease-out;
	}
}
@keyframes turn-over {
	100% {
		transform:
			rotateY(90deg)
			scale(1.125)
			translateY(-$lhse*2);
	}
}
.card-turning-over {
	animation: turn-over 333.3ms ease-in; // The duration needs to match the timing in the `clickedTurnOver` method in CardImage.vue.
	animation-iteration-count: 2;
	animation-direction: alternate;
}
.deck-editor {
	.card-image {
		@include card-link('left');

		.card-edge {
			@include card-edge-filters('left');
		}
	}
	.card-browse-enter-active {
		@include card-fan-in-from('left');
	}
}
.draw-simulator {
	.card-image {
		@include card-link('right');

		.card-edge {
			@include card-edge-filters('right');
		}
	}
	.card-browse-enter-active {
		@include card-fan-in-from('right');
	}
}
.placement-outline-fade {
	&-enter-active,
	&-leave-active {
		transition: opacity .5s ease;
	}
	&-leave-active {
		transition-delay: 1s;
	}
	&-enter,
	&-leave-to {
		opacity: 0;
	}
}
.card-browse-appear-active {
	@extend .card-browse-enter-active;
	animation-delay: $transition-duration-standard*1.5;
	animation-duration: $animation-duration-card-browse*1.5;
	animation-fill-mode: backwards;
}

@media (max-width: $width-app-breakpoint-tablet) {
	.card-image {
		.image-container {
			width: min(#{488px * .6667}, 38.20vw);
		}
	}
}
@media (max-width: $width-deck-hidden-image) {
	.card-image {
		z-index: index($layers, app-header);

		.image-container {
			width: auto;
			aspect-ratio: auto;
		}
		.card-placement-outline {
			display: none;
		}
		.card-shadow {
			width: 100%;
			height: 100%;
			will-change: auto;

			&,
			&:hover,
			&:focus-within {
				filter: drop-shadow(0 0 $lhse rgba(#fff, .1667));
			}
		}
		.card-edge {
			width: 100%;
			height: 100%;
			display: flex;
			align-items: center;
			justify-content: center;
		}
		a {
			position: static;
			margin: $lhse*.5;

			&:hover,
			&:focus {
				transform: none !important;
			}
		}
		img {
			max-width: 91.67vw;
			max-height: 91.67vh;
		}
		.turn-over {
			position: fixed;
			bottom: divide($lhse, 3);
			left: $lhse*.5;
			display: block;
			min-height: auto;
			z-index: 1;
		}
		.card-browse-leave-active {
			display: none;
		}
		.close {
			@include button(true);
			display: block;
			position: absolute;
			top: divide($lhse, 3);
			right: $lhse*.25;
			min-width: $lhse;
			padding: 0;
		}
	}
	.image-overlay {
		@include overlay-bg;
	}
	.image-overlay-fade {
		&-enter-active,
		&-leave-active {
			transition: opacity divide(1s, 3) ease;
		}
		&-leave-active {
			transition-duration: divide(1s, 6);
		}
		&-enter,
		&-leave-to {
			opacity: 0;
		}
	}
	.card-browse {
		&-enter-active {
			animation: none;
		}
		&-leave-active {
			animation: none;
		}
	}
}
